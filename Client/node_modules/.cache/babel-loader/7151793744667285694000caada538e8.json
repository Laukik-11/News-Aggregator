{"ast":null,"code":"var _jsxFileName = \"D:\\\\React app\\\\newsaggregator\\\\Client\\\\src\\\\Components\\\\News-Category\\\\NewsCategory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./NewsCategory.css\";\nimport { Link } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport Loading from \"./../Loader/Loading\";\nimport image from \"../../Images/news.jfif\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\");\n\nfunction Items(_ref) {\n  let {\n    currentItems,\n    category\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentItems && currentItems.map((cardd, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: `/article/${category}/${index}`\n        },\n        className: \"card\",\n        children: [cardd.urlToImage ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thumb\",\n          style: {\n            backgroundImage: `url(${cardd.urlToImage})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thumb\",\n          style: {\n            backgroundImage: url({\n              image\n            })\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: cardd.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: cardd.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n}\n\n_c = Items;\n\nconst NewsCategory = _ref2 => {\n  _s();\n\n  let {\n    category\n  } = _ref2;\n  const [isLoading, setLoading] = useState(true);\n  const [Cards, setCards] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await axios.get(\"https://newsapi.org/v2/top-headlines\", {\n          params: {\n            country: \"in\",\n            category: category,\n            // apiKey: \"b186e59534794e9a9b732580246cf18a\",\n            // apiKey: \"9ad6a21779da47c28dde78964e668571\",\n            apikey: \"94c83c96e50d4fec839229c7fbabfb30\",\n            // apikey: \"8b08468bd2174e088385c41a3930dc08\",\n            sortBy: \"popularity\"\n          }\n        }); // console.log(res.data.articles);\n\n        setCards(res.data.articles.slice(0, 18));\n        setLoading(false);\n        console.log(Cards);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    fetchData();\n  }, [category]);\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0); // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n\n  const [itemOffset, setItemOffset] = useState(0);\n  const itemsPerPage = 7;\n  useEffect(() => {\n    // Fetch items from another resources.\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    setCurrentItems(Cards.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(Cards.length / itemsPerPage));\n  }, [itemOffset, itemsPerPage, Cards]); // Invoke when user click to request another page.\n\n  const handlePageClick = event => {\n    const newOffset = event.selected * itemsPerPage % Cards.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title-heading\",\n        children: category.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"loading\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"band\",\n        children: /*#__PURE__*/_jsxDEV(Items, {\n          currentItems: currentItems,\n          category: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-3\",\n        children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n          breakLabel: \"...\",\n          nextLabel: \"next >\",\n          onPageChange: handlePageClick,\n          pageRangeDisplayed: 5,\n          pageCount: pageCount,\n          previousLabel: \"< previous\",\n          renderOnZeroPageCount: null,\n          breakClassName: \"page-item\",\n          breakLinkClassName: \"page-link\",\n          containerClassName: \"pagination\",\n          pageClassName: \"page-item\",\n          pageLinkClassName: \"page-link\",\n          previousClassName: \"page-item\",\n          previousLinkClassName: \"page-link\",\n          nextClassName: \"page-item\",\n          nextLinkClassName: \"page-link\",\n          activeClassName: \"active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewsCategory, \"catqY7nKjmmvqlcwOL6XQAlr5pA=\");\n\n_c2 = NewsCategory;\nexport default NewsCategory;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Items\");\n$RefreshReg$(_c2, \"NewsCategory\");","map":{"version":3,"sources":["D:/React app/newsaggregator/Client/src/Components/News-Category/NewsCategory.js"],"names":["React","useState","useEffect","Link","ReactPaginate","Loading","image","axios","require","Items","currentItems","category","map","cardd","index","pathname","urlToImage","backgroundImage","url","title","author","NewsCategory","isLoading","setLoading","Cards","setCards","fetchData","res","get","params","country","apikey","sortBy","data","articles","slice","console","log","err","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","itemsPerPage","endOffset","Math","ceil","length","handlePageClick","event","newOffset","selected","toUpperCase"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./NewsCategory.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport Loading from \"./../Loader/Loading\";\r\nimport image from \"../../Images/news.jfif\";\r\n\r\nconst axios = require(\"axios\");\r\n\r\nfunction Items({ currentItems, category }) {\r\n  return (\r\n    <>\r\n      {currentItems &&\r\n        currentItems.map((cardd, index) => (\r\n          <div className=\"item\" key={index}>\r\n            <Link\r\n              to={{ pathname: `/article/${category}/${index}` }}\r\n              className=\"card\"\r\n            >\r\n              {cardd.urlToImage ? (\r\n                <div\r\n                  className=\"thumb\"\r\n                  style={{ backgroundImage: `url(${cardd.urlToImage})` }}\r\n                ></div>\r\n              ) : (\r\n                <div\r\n                  className=\"thumb\"\r\n                  style={{\r\n                    backgroundImage: url({ image }),\r\n                  }}\r\n                ></div>\r\n              )}\r\n              <article>\r\n                <h1>{cardd.title}</h1>\r\n                <span>{cardd.author}</span>\r\n              </article>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n\r\nconst NewsCategory = ({ category }) => {\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  const [Cards, setCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const res = await axios.get(\"https://newsapi.org/v2/top-headlines\", {\r\n          params: {\r\n            country: \"in\",\r\n            category: category,\r\n            // apiKey: \"b186e59534794e9a9b732580246cf18a\",\r\n            // apiKey: \"9ad6a21779da47c28dde78964e668571\",\r\n            apikey: \"94c83c96e50d4fec839229c7fbabfb30\",\r\n            // apikey: \"8b08468bd2174e088385c41a3930dc08\",\r\n            sortBy: \"popularity\",\r\n          },\r\n        });\r\n\r\n        // console.log(res.data.articles);\r\n\r\n        setCards(res.data.articles.slice(0, 18));\r\n        setLoading(false);\r\n        console.log(Cards);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [category]);\r\n\r\n  const [currentItems, setCurrentItems] = useState(null);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  // Here we use item offsets; we could also use page offsets\r\n  // following the API or data you're working with.\r\n  const [itemOffset, setItemOffset] = useState(0);\r\n  const itemsPerPage = 7;\r\n\r\n  useEffect(() => {\r\n    // Fetch items from another resources.\r\n    const endOffset = itemOffset + itemsPerPage;\r\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n    setCurrentItems(Cards.slice(itemOffset, endOffset));\r\n    setPageCount(Math.ceil(Cards.length / itemsPerPage));\r\n  }, [itemOffset, itemsPerPage, Cards]);\r\n\r\n  // Invoke when user click to request another page.\r\n  const handlePageClick = (event) => {\r\n    const newOffset = (event.selected * itemsPerPage) % Cards.length;\r\n    console.log(\r\n      `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n    );\r\n    setItemOffset(newOffset);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h1 className=\"title-heading\">{category.toUpperCase()}</h1>\r\n      </div>\r\n      {/* <h1 className=\"date-right\">{category}</h1> */}\r\n      {isLoading ? (\r\n        <loading />\r\n      ) : (\r\n        <>\r\n          <div className=\"band\">\r\n            <Items currentItems={currentItems} category={category} />\r\n          </div>\r\n          <div className=\"text-center mb-3\">\r\n            <ReactPaginate\r\n              breakLabel=\"...\"\r\n              nextLabel=\"next >\"\r\n              onPageChange={handlePageClick}\r\n              pageRangeDisplayed={5}\r\n              pageCount={pageCount}\r\n              previousLabel=\"< previous\"\r\n              renderOnZeroPageCount={null}\r\n              breakClassName={\"page-item\"}\r\n              breakLinkClassName={\"page-link\"}\r\n              containerClassName={\"pagination\"}\r\n              pageClassName={\"page-item\"}\r\n              pageLinkClassName={\"page-link\"}\r\n              previousClassName={\"page-item\"}\r\n              previousLinkClassName={\"page-link\"}\r\n              nextClassName={\"page-item\"}\r\n              nextLinkClassName={\"page-link\"}\r\n              activeClassName={\"active\"}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NewsCategory;\r\n"]},"metadata":{},"sourceType":"module"}