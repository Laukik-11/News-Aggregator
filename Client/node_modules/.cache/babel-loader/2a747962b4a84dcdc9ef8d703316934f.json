{"ast":null,"code":"var _jsxFileName = \"D:\\\\React app\\\\newsaggregator\\\\Client\\\\src\\\\Components\\\\News-Category\\\\NewsCategory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./NewsCategory.css\";\nimport { Link } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\");\n\nfunction Items(_ref) {\n  let {\n    currentItems\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentItems && currentItems.map((cardd, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: {\n          pathname: `/article`\n        },\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thumb\",\n          style: {\n            backgroundImage: `url(${cardd.urlToImage})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: cardd.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: cardd.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n}\n\n_c = Items;\n\nconst NewsCategory = _ref2 => {\n  _s();\n\n  let {\n    category\n  } = _ref2;\n  const [Cards, setCards] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await axios.get(\"https://newsapi.org/v2/top-headlines\", {\n          params: {\n            country: \"in\",\n            category: category,\n            // apiKey: \"b186e59534794e9a9b732580246cf18a\",\n            apiKey: \"9ad6a21779da47c28dde78964e668571\",\n            // apikey: \"94c83c96e50d4fec839229c7fbabfb30\",\n            // apikey: \"8b08468bd2174e088385c41a3930dc08\",\n            sortBy: \"popularity\"\n          }\n        }); // console.log(res.data.articles);\n\n        setCards(res.data.articles.slice(0, 18));\n        console.log(Cards);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    fetchData();\n  }, [category]);\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0); // Here we use item offsets; we could also use page offsets\n  // following the API or data you're working with.\n\n  const [itemOffset, setItemOffset] = useState(0);\n  const itemsPerPage = 7;\n  useEffect(() => {\n    // Fetch items from another resources.\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    setCurrentItems(Cards.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(Cards.length / itemsPerPage));\n  }, [itemOffset, itemsPerPage, Cards]); // Invoke when user click to request another page.\n\n  const handlePageClick = event => {\n    const newOffset = event.selected * itemsPerPage % Cards.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title-heading\",\n        children: category.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"band\",\n      children: /*#__PURE__*/_jsxDEV(Items, {\n        currentItems: currentItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-3\",\n      children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        breakLabel: \"...\",\n        nextLabel: \"next >\",\n        onPageChange: handlePageClick,\n        pageRangeDisplayed: 5,\n        pageCount: pageCount,\n        previousLabel: \"< previous\",\n        renderOnZeroPageCount: null,\n        breakClassName: \"page-item\",\n        breakLinkClassName: \"page-link\",\n        containerClassName: \"pagination\",\n        pageClassName: \"page-item\",\n        pageLinkClassName: \"page-link\",\n        previousClassName: \"page-item\",\n        previousLinkClassName: \"page-link\",\n        nextClassName: \"page-item\",\n        nextLinkClassName: \"page-link\",\n        activeClassName: \"active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewsCategory, \"2GDVXwdA//sQgRwTOR/39e0cKOw=\");\n\n_c2 = NewsCategory;\nexport default NewsCategory;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Items\");\n$RefreshReg$(_c2, \"NewsCategory\");","map":{"version":3,"sources":["D:/React app/newsaggregator/Client/src/Components/News-Category/NewsCategory.js"],"names":["React","useState","useEffect","Link","ReactPaginate","axios","require","Items","currentItems","map","cardd","index","pathname","backgroundImage","urlToImage","title","author","NewsCategory","category","Cards","setCards","fetchData","res","get","params","country","apiKey","sortBy","data","articles","slice","console","log","err","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","itemsPerPage","endOffset","Math","ceil","length","handlePageClick","event","newOffset","selected","toUpperCase"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./NewsCategory.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactPaginate from \"react-paginate\";\r\nconst axios = require(\"axios\");\r\n\r\nfunction Items({ currentItems }) {\r\n  return (\r\n    <>\r\n      {currentItems &&\r\n        currentItems.map((cardd, index) => (\r\n          <div className=\"item\" key={index}>\r\n            <Link to={{ pathname: `/article` }} className=\"card\">\r\n              <div\r\n                className=\"thumb\"\r\n                style={{ backgroundImage: `url(${cardd.urlToImage})` }}\r\n              ></div>\r\n              <article>\r\n                <h1>{cardd.title}</h1>\r\n                <span>{cardd.author}</span>\r\n              </article>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n\r\nconst NewsCategory = ({ category }) => {\r\n  const [Cards, setCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const res = await axios.get(\"https://newsapi.org/v2/top-headlines\", {\r\n          params: {\r\n            country: \"in\",\r\n            category: category,\r\n            // apiKey: \"b186e59534794e9a9b732580246cf18a\",\r\n            apiKey: \"9ad6a21779da47c28dde78964e668571\",\r\n            // apikey: \"94c83c96e50d4fec839229c7fbabfb30\",\r\n            // apikey: \"8b08468bd2174e088385c41a3930dc08\",\r\n            sortBy: \"popularity\",\r\n          },\r\n        });\r\n\r\n        // console.log(res.data.articles);\r\n\r\n        setCards(res.data.articles.slice(0, 18));\r\n        console.log(Cards);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [category]);\r\n\r\n  const [currentItems, setCurrentItems] = useState(null);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  // Here we use item offsets; we could also use page offsets\r\n  // following the API or data you're working with.\r\n  const [itemOffset, setItemOffset] = useState(0);\r\n  const itemsPerPage = 7;\r\n\r\n  useEffect(() => {\r\n    // Fetch items from another resources.\r\n    const endOffset = itemOffset + itemsPerPage;\r\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n    setCurrentItems(Cards.slice(itemOffset, endOffset));\r\n    setPageCount(Math.ceil(Cards.length / itemsPerPage));\r\n  }, [itemOffset, itemsPerPage, Cards]);\r\n\r\n  // Invoke when user click to request another page.\r\n  const handlePageClick = (event) => {\r\n    const newOffset = (event.selected * itemsPerPage) % Cards.length;\r\n    console.log(\r\n      `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n    );\r\n    setItemOffset(newOffset);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h1 className=\"title-heading\">{category.toUpperCase()}</h1>\r\n      </div>\r\n      {/* <h1 className=\"date-right\">{category}</h1> */}\r\n      <div className=\"band\">\r\n        <Items currentItems={currentItems} />\r\n      </div>\r\n      <div className=\"text-center mb-3\">\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\"next >\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"< previous\"\r\n          renderOnZeroPageCount={null}\r\n          breakClassName={\"page-item\"}\r\n          breakLinkClassName={\"page-link\"}\r\n          containerClassName={\"pagination\"}\r\n          pageClassName={\"page-item\"}\r\n          pageLinkClassName={\"page-link\"}\r\n          previousClassName={\"page-item\"}\r\n          previousLinkClassName={\"page-link\"}\r\n          nextClassName={\"page-item\"}\r\n          nextLinkClassName={\"page-link\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default NewsCategory;\r\n"]},"metadata":{},"sourceType":"module"}